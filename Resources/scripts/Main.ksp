// import_nckp("C:\Users\dog1\Documents\Git Repos\WholeGrains\Resources\performance_view\perfview.nckp")
import "Engine.ksp"
import "GUICallbacks.ksp"

on init
    ENGINE_INITIALIZE()
end on

on persistence_changed
    i := 0
    j := 0
    k := 0
    l := 0
    loadArrayIterator := 0
    listenerIterator := 0

    // // initialize base path
    GuiCallBacks.basepath := get_folder(GET_FOLDER_PATCH_DIR)

    loadPreset(1)
end on

GUI_CALLBACKS()

on note
    Engine.isParticle := 0

    if(Engine.isParticle = 0)
        Engine.noteIsOn := 1
        lightUpSection(EVENT_NOTE, 1)
    end if

    ignore_event(EVENT_ID)

    // used for choosing random sample start pos
    if (Engine.reverseModeButton = 0)
        set_controller(102, random(0, 100))
    end if

    // make more likely to be higher position if reverse mode is on }
    if(Engine.reverseModeButton = 1)
        set_controller(102, random(50, 100))
    end if
    
    // if particle mode is on
    if(Engine.particleMode = 1)
        disallow_group(2)
        disallow_group(3)
        disallow_group(4)
        disallow_group(5)

        if(Engine.stretchOnOff = 1)
            disallow_group(0)
            disallow_group(1)
        else
            disallow_group(7)
            disallow_group(6)
        end if

        Engine.new_id := play_note($EVENT_NOTE, $EVENT_VELOCITY, 0, -1)

        if(Engine.particleStretchMode = 1)
            allow_group(4)
            allow_group(5)
        else
            allow_group(2)
            allow_group(3)
        end if

        disallow_group(0)
        disallow_group(1)
        disallow_group(6)
        disallow_group(7)

        PARTICLE_ON_NOTE_CB()

        if(Engine.stretchOnOff = 1)
            allow_group(6)
            allow_group(7)
        else
            allow_group(0)
            allow_group(1)
        end if
    else
        if(Engine.stretchOnOff = 1)
            disallow_group(0)
            disallow_group(1)
        else
            disallow_group(7)
            disallow_group(6)
        end if

        disallow_group(2)
        disallow_group(3)
        disallow_group(4)
        disallow_group(5)

        Engine.new_id := play_note($EVENT_NOTE, $EVENT_VELOCITY, 0, -1)
    end if

end on

on release
    note_off(Engine.new_id)
    note_off(Engine.art_id)

    if(Engine.isParticle = 0)
        Engine.noteIsOn := 0
        lightUpSection(EVENT_NOTE, 0)
    end if
end on

{ ignore midi CCs that I use (TODO) }
on controller
    select ($CC_NUM)
        case 1
            Engine.mainKnobMod := %CC[1]
            callbackContent(37)
        case 65 to 101
        case 102 to 112
            ignore_controller
    end select
end on

on async_complete
    if (NI_ASYNC_ID = GuiCallBacks.loadPresetArrayID[0])
        GuiCallBacks.loadPresetArrayID[0] := -1
    end if

    if (NI_ASYNC_ID = GuiCallBacks.loadPresetArrayID[1])
        GuiCallBacks.loadPresetArrayID[1] := -1   
    end if

    if (NI_ASYNC_ID = GuiCallBacks.loadPresetArrayID[2])
        GuiCallBacks.loadPresetArrayID[2] := -1   
    end if
end on

on listener
    // message(Engine.listenerCalls[0])
    while(listenerIterator < Engine.numDynamicLabels)
        if(Engine.lastUIChange # listenerIterator)
            Engine.listenerCalls[listenerIterator] := Engine.listenerCalls[listenerIterator] + 1
        else
            Engine.listenerCalls[listenerIterator] := 0
        end if
        listenerIterator := listenerIterator + 1
    end while
    listenerIterator := 0


    // message(Engine.listenerCalls[0] & " " & Engine.lastUIChange)
    // select(Engine.lastUIChange)
    //     case 0
    //         if(KSP_TIMER > 500000)
    //             resetLabels(Engine.lastUIChange)
    //             set_text(Engine.attackLabel, "Attack")
    //             Engine.UIElementIsChanging[0] := 0
    //         end if
    //     case 1
    //         if(KSP_TIMER > 500000)
    //             resetLabels(Engine.lastUIChange)
    //             set_text(Engine.decayLabel, "Decay")
    //             Engine.UIElementIsChanging[1] := 0
    //         end if
    // end select

    //                                            change                    change
    if(KSP_TIMER > 500000 or (Engine.lastUIChange # 0 and Engine.listenerCalls[0] > 3))
        set_text(Engine.attackLabel, "Attack")
    end if

    if(KSP_TIMER > 500000 or (Engine.lastUIChange # 1 and Engine.listenerCalls[1] > 3))
        set_text(Engine.decayLabel, "Decay")
    end if

    if(KSP_TIMER > 500000 or (Engine.lastUIChange # 2 and Engine.listenerCalls[2] > 3))
        set_text(Engine.sustainLabel, "Sustain")
    end if

    if(KSP_TIMER > 500000 or (Engine.lastUIChange # 3 and Engine.listenerCalls[3] > 3))
        set_text(Engine.releaseLabel, "Release")
    end if

    if(KSP_TIMER > 500000 or (Engine.lastUIChange # 4 and Engine.listenerCalls[4] > 3))
        set_text(Engine.attackCurveLabel, "Attack Curve")
    end if

    if(KSP_TIMER > 500000 or (Engine.lastUIChange # 5 and Engine.listenerCalls[5] > 3))
        set_text(Engine.crossfadeLabel, "Overlap")
    end if

    if(KSP_TIMER > 500000 or (Engine.lastUIChange # 6 and Engine.listenerCalls[6] > 3))
        set_text(Engine.footerLabels0, "Overlap")
    end if

    if(KSP_TIMER > 500000 or (Engine.lastUIChange # 7 and Engine.listenerCalls[7] > 3))
        set_text(Engine.footerLabels1, "Bitcrush")
    end if

    if(KSP_TIMER > 500000 or (Engine.lastUIChange # 8 and Engine.listenerCalls[8] > 3))
        set_text(Engine.footerLabels2, "Droplets")
    end if

    if(KSP_TIMER > 500000 or (Engine.lastUIChange # 9 and Engine.listenerCalls[9] > 3))
        set_text(Engine.footerLabels3, "Delay")
    end if

    if(KSP_TIMER > 500000 or (Engine.lastUIChange # 10 and Engine.listenerCalls[10] > 3))
        set_text(Engine.footerLabels4, "Reverb")
    end if

    if(KSP_TIMER > 500000 or (Engine.lastUIChange # 11 and Engine.listenerCalls[11] > 3))
        set_text(Engine.particleMixLabel, "Mix")
    end if

    if(KSP_TIMER > 500000 or (Engine.lastUIChange # 12 and Engine.listenerCalls[12] > 3))
        set_text(Engine.particleRateLabel, "Rate")
    end if

    if(KSP_TIMER > 500000 or (Engine.lastUIChange # 13 and Engine.listenerCalls[13] > 3))
        set_text(Engine.particleVariationLabel, "Time Variation")
    end if

    if(KSP_TIMER > 500000 or (Engine.lastUIChange # 14 and Engine.listenerCalls[14] > 3))
        set_text(Engine.highShelfLabel, "High Shelf")
    end if

    if(KSP_TIMER > 500000 or (Engine.lastUIChange # 15 and Engine.listenerCalls[15] > 3))
        set_text(Engine.midBandLabel, "Mid Band")
    end if

    if(KSP_TIMER > 500000 or (Engine.lastUIChange # 16 and Engine.listenerCalls[16] > 3))
        set_text(Engine.lowShelfLabel, "Low Shelf")
    end if

    if(KSP_TIMER > 500000 or (Engine.lastUIChange # 17 and Engine.listenerCalls[17] > 3))
        set_text(Engine.sampleRateLabel, "Sample Rate")
    end if

    if(KSP_TIMER > 500000 or (Engine.lastUIChange # 18 and Engine.listenerCalls[18] > 3))
        set_text(Engine.delayRateLabel, "Rate")
    end if

    if(KSP_TIMER > 500000 or (Engine.lastUIChange # 19 and Engine.listenerCalls[19] > 3))
        set_text(Engine.delayFeedbackLabel, "Feedback")
    end if

    if(KSP_TIMER > 500000 or (Engine.lastUIChange # 20 and Engine.listenerCalls[20] > 3))
        set_text(Engine.delayMixLabel, "Mix")
    end if

    if(KSP_TIMER > 500000 or (Engine.lastUIChange # 21 and Engine.listenerCalls[21] > 3))
        set_text(Engine.reverbDecayLabel, "Decay")
    end if

    if(KSP_TIMER > 500000 or (Engine.lastUIChange # 22 and Engine.listenerCalls[22] > 3))
        set_text(Engine.reverbMixLabel, "Mix")
    end if

    if(KSP_TIMER > 500000 or (Engine.lastUIChange # 23 and Engine.listenerCalls[23] > 3))
        set_text(Engine.particleOctaveLabel, "Octave Variation")
    end if

    if(KSP_TIMER > 500000 or (Engine.lastUIChange # 24 and Engine.listenerCalls[24] > 3))
        set_text(Engine.particleSpreadLabel, "Pan Variation")
    end if

    if(KSP_TIMER > 500000 or (Engine.lastUIChange # 25 and Engine.listenerCalls[25] > 3))
        set_text(Engine.particleVolVariationLabel, "Volume Variation")
    end if

    if(KSP_TIMER > 500000 or (Engine.lastUIChange # 26 and Engine.listenerCalls[26] > 3))
        set_text(Engine.particleCrossfadeKnobLabel, "Overlap")
    end if

    if(KSP_TIMER > 500000 or (Engine.lastUIChange # 27 and Engine.listenerCalls[27] > 3))
        set_text(Engine.particleStretchSpeedLabel, "Speed")
    end if

    if(KSP_TIMER > 500000 or (Engine.lastUIChange # 28 and Engine.listenerCalls[28] > 3))
        set_text(Engine.particleStretchFormantLabel, "Formant")
    end if

    if(KSP_TIMER > 500000 or (Engine.lastUIChange # 29 and Engine.listenerCalls[29] > 3))
        set_text(Engine.particleAttackKnobLabel, "Attack")
    end if

    if(KSP_TIMER > 500000 or (Engine.lastUIChange # 30 and Engine.listenerCalls[30] > 3))
        set_text(Engine.particleDecayKnobLabel, "Decay")
    end if

    if(KSP_TIMER > 500000 or (Engine.lastUIChange # 31 and Engine.listenerCalls[31] > 3))
        set_text(Engine.particleSustainKnobLabel, "Sustain")
    end if

    if(KSP_TIMER > 500000 or (Engine.lastUIChange # 32 and Engine.listenerCalls[32] > 3))
        set_text(Engine.particleReleaseKnobLabel, "Release")
    end if

    if(KSP_TIMER > 500000 or (Engine.lastUIChange # 33 and Engine.listenerCalls[33] > 3))
        set_text(Engine.particleAttackCurveKnobLabel, "Attack Curve")
    end if

    if(KSP_TIMER > 500000 or (Engine.lastUIChange # 34 and Engine.listenerCalls[34] > 3))
        set_text(Engine.bitsLabel, "Bits")
    end if

    if(KSP_TIMER > 500000 or (Engine.lastUIChange # 35 and Engine.listenerCalls[35] > 3))
        set_text(Engine.stretchSpeedLabel, "Speed")
    end if

    if(KSP_TIMER > 500000 or (Engine.lastUIChange # 36 and Engine.listenerCalls[36] > 3))
        set_text(Engine.stretchFormantLabel, "Formant")
    end if



    // if(KSP_TIMER > 500000 or (Engine.lastUIChange # 34 and Engine.listenerCalls[34] > 3))
    //     set_text(, "")
    // end if


    // reset listener calls if its been over 10 calls
    while(listenerIterator < Engine.numDynamicLabels)
        if(Engine.lastUIChange # listenerIterator and Engine.listenerCalls[listenerIterator] > 3)
            Engine.listenerCalls[listenerIterator] := 0
        end if
        listenerIterator := listenerIterator + 1
    end while
    listenerIterator := 0
end on


function lightUpSection(pointer, shouldLight)
    if (Engine.noteIsOn = 1)
        select(pointer)
            case 19 to 25
                Engine.notesPlayingPerZone[0] := Engine.notesPlayingPerZone[0] + 1
                Engine.lightUp[0] -> picture_state := 1
            case 26 to 32
                Engine.notesPlayingPerZone[1] := Engine.notesPlayingPerZone[1] + 1
                Engine.lightUp[1] -> picture_state := 1
            case 33 to 39
                Engine.notesPlayingPerZone[2] := Engine.notesPlayingPerZone[2] + 1
                Engine.lightUp[2] -> picture_state := 1
            case 40 to 46
                Engine.notesPlayingPerZone[3] := Engine.notesPlayingPerZone[3] + 1
                Engine.lightUp[3] -> picture_state := 1
            case 47 to 53
                Engine.notesPlayingPerZone[4] := Engine.notesPlayingPerZone[4] + 1
                Engine.lightUp[4] -> picture_state := 1
            case 54 to 60
                Engine.notesPlayingPerZone[5] := Engine.notesPlayingPerZone[5] + 1
                Engine.lightUp[5] -> picture_state := 1
            case 61 to 67
                Engine.notesPlayingPerZone[6] := Engine.notesPlayingPerZone[6] + 1
                Engine.lightUp[6] -> picture_state := 1
            case 68 to 74
                Engine.notesPlayingPerZone[7] := Engine.notesPlayingPerZone[7] + 1
                Engine.lightUp[7] -> picture_state := 1
            case 75 to 81
                Engine.notesPlayingPerZone[8] := Engine.notesPlayingPerZone[8] + 1
                Engine.lightUp[8] -> picture_state := 1
            case 82 to 88
                Engine.notesPlayingPerZone[9] := Engine.notesPlayingPerZone[9] + 1
                Engine.lightUp[9] -> picture_state := 1
            case 89 to 95
                Engine.notesPlayingPerZone[10] := Engine.notesPlayingPerZone[10] + 1
                Engine.lightUp[10] -> picture_state := 1
        end select
    else
        select(pointer)
            case 19 to 25
                Engine.notesPlayingPerZone[0] := Engine.notesPlayingPerZone[0] - 1
                if(Engine.notesPlayingPerZone[0] = 0)
                    Engine.lightUp[0] -> picture_state := 0
                end if
            case 26 to 32
                Engine.notesPlayingPerZone[1] := Engine.notesPlayingPerZone[1] - 1
                if(Engine.notesPlayingPerZone[1] = 0)
                    Engine.lightUp[1] -> picture_state := 0
                end if
            case 33 to 39
                Engine.notesPlayingPerZone[2] := Engine.notesPlayingPerZone[2] - 1
                if(Engine.notesPlayingPerZone[2] = 0)
                    Engine.lightUp[2] -> picture_state := 0
                end if
            case 40 to 46
                Engine.notesPlayingPerZone[3] := Engine.notesPlayingPerZone[3] - 1
                if(Engine.notesPlayingPerZone[3] = 0)
                    Engine.lightUp[3] -> picture_state := 0
                end if
            case 47 to 53
                Engine.notesPlayingPerZone[4] := Engine.notesPlayingPerZone[4] - 1
                if(Engine.notesPlayingPerZone[4] = 0)
                    Engine.lightUp[4] -> picture_state := 0
                end if
            case 54 to 60
                Engine.notesPlayingPerZone[5] := Engine.notesPlayingPerZone[5] - 1
                if(Engine.notesPlayingPerZone[5] = 0)
                    Engine.lightUp[5] -> picture_state := 0
                end if
            case 61 to 67
                Engine.notesPlayingPerZone[6] := Engine.notesPlayingPerZone[6] - 1
                if(Engine.notesPlayingPerZone[6] = 0)
                    Engine.lightUp[6] -> picture_state := 0
                end if
            case 68 to 74
                Engine.notesPlayingPerZone[7] := Engine.notesPlayingPerZone[7] - 1
                if(Engine.notesPlayingPerZone[7] = 0)
                    Engine.lightUp[7] -> picture_state := 0
                end if
            case 75 to 81
                Engine.notesPlayingPerZone[8] := Engine.notesPlayingPerZone[8] - 1
                if(Engine.notesPlayingPerZone[8] = 0)
                    Engine.lightUp[8] -> picture_state := 0
                end if
            case 82 to 88
                Engine.notesPlayingPerZone[9] := Engine.notesPlayingPerZone[9] - 1
                if(Engine.notesPlayingPerZone[9] = 0)
                    Engine.lightUp[9] -> picture_state := 0
                end if
            case 89 to 95
                Engine.notesPlayingPerZone[10] := Engine.notesPlayingPerZone[10] - 1
                if(Engine.notesPlayingPerZone[10] = 0)
                    Engine.lightUp[10] -> picture_state := 0
                end if
        end select
    end if
end function